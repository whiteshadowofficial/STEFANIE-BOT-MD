import { createHash } from 'crypto'
let Reg = /\|?(.*)([.|] *?)([0-9]*)$/i
let handler = async function (m, { conn, text, usedPrefix, command }) {
  let user = global.db.data.users[m.sender]
  let name2 = conn.getName(m.sender)
  if (user.registered === true) throw ` *You are already registered..üòæ*`
  if (!Reg.test(text)) throw `*To register, give the following command.*\n\nExg:- *.register* ws.18`
  let [_, name, splitter, age] = text.match(Reg)
  if (!name) throw ' *The name cannot contain a space...‚è±*Ô∏è'
  if (!age) throw ' *The age cannot contain a space...‚è±Ô∏è*'
  if (name.length >= 30) throw ' *Your name is not accepted, please enter another name...‚è±Ô∏è*' 
  age = parseInt(age)
  if (age > 100) throw ' *Your age is not accepted, please enter another age...‚è±Ô∏è*'
  if (age < 5) throw ' ‚è±*You cannot stay in this whatsapp group...‚è±*Ô∏è '
  user.name = name.trim()
  user.age = age
  user.regTime = + new Date
  user.registered = true
  let sn = createHash('md5').update(m.sender).digest('hex')
  m.reply(`
‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
‚îÇ
‚îÇ *Registered Successful..‚è±Ô∏è*
‚îÇ
‚îÇ ‚û¨*NUMBER:* ${name}
‚îÇ ‚û¨*AGE* : ${age} years
‚îÇ ‚û¨*ID* : ${sn}
‚îÇ
‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ

 jessi 
`.trim())
}
handler.help = ['register'].map(v => v + ' <name.age>')
handler.tags = ['Register']

handler.command = ['verify', 'req', 'register', 'qhw'] 

export default handler

